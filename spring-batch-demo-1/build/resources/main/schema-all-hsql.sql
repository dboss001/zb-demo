/*
 *  Batch metadata
 */

DROP TABLE  BATCH_STEP_EXECUTION_CONTEXT IF EXISTS;
DROP TABLE  BATCH_JOB_EXECUTION_CONTEXT IF EXISTS;
DROP TABLE  BATCH_STEP_EXECUTION IF EXISTS;
DROP TABLE  BATCH_JOB_EXECUTION_PARAMS IF EXISTS;
DROP TABLE  BATCH_JOB_EXECUTION IF EXISTS;
DROP TABLE  BATCH_JOB_INSTANCE IF EXISTS;

DROP TABLE  BATCH_STEP_EXECUTION_SEQ IF EXISTS;
DROP TABLE  BATCH_JOB_EXECUTION_SEQ IF EXISTS;
DROP TABLE  BATCH_JOB_SEQ IF EXISTS;


CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY ,
	VERSION BIGINT ,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ;

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY ,
	VERSION BIGINT  ,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME TIMESTAMP NOT NULL,
	START_TIME TIMESTAMP DEFAULT NULL ,
	END_TIME TIMESTAMP DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED TIMESTAMP,
	JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ;

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	TYPE_CD VARCHAR(6) NOT NULL ,
	KEY_NAME VARCHAR(100) NOT NULL ,
	STRING_VAL VARCHAR(250) ,
	DATE_VAL TIMESTAMP DEFAULT NULL ,
	LONG_VAL BIGINT ,
	DOUBLE_VAL DOUBLE PRECISION ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY ,
	VERSION BIGINT NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	START_TIME TIMESTAMP NOT NULL ,
	END_TIME TIMESTAMP DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	COMMIT_COUNT BIGINT ,
	READ_COUNT BIGINT ,
	FILTER_COUNT BIGINT ,
	WRITE_COUNT BIGINT ,
	READ_SKIP_COUNT BIGINT ,
	WRITE_SKIP_COUNT BIGINT ,
	PROCESS_SKIP_COUNT BIGINT ,
	ROLLBACK_COUNT BIGINT ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED TIMESTAMP,
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT LONGVARCHAR ,
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT LONGVARCHAR ,
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (
	ID BIGINT IDENTITY
);
CREATE TABLE BATCH_JOB_EXECUTION_SEQ (
	ID BIGINT IDENTITY
);
CREATE TABLE BATCH_JOB_SEQ (
	ID BIGINT IDENTITY
);


/*
 *  Tables with data
 */

CREATE TABLE input_source  (
    document_name VARCHAR(20),
    group_name VARCHAR(20),
    item_name VARCHAR(20),
    amount DECIMAL(10,2) NOT NULL
);

INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc1', 'Group1', 'Item1', 100);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc1', 'Group1', 'Item2', 100);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc1', 'Group1', 'Item3', 100);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc1', 'Group2', 'Item4', 50);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc1', 'Group2', 'Item5', 100);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc1', 'Group2', 'Item6', 200);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc1', 'Group2', 'Item7', 500);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc1', 'Group2', 'Item8', 200);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc2', 'Group3', 'Item9', 1000);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc3', 'Group4', 'Item10', 500);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc3', 'Group4', 'Item11', 1000);
INSERT INTO input_source (document_name, group_name, item_name, amount) VALUES ('Doc3', 'Group4', 'Item12', 500);

CREATE TABLE dual  (id BIGINT IDENTITY NOT NULL PRIMARY KEY, description VARCHAR(20));
INSERT INTO dual (description) VALUES ('dummy');

CREATE TABLE output_document  (
    id BIGINT IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(20)
);
CREATE SEQUENCE output_document_seq START WITH 1 INCREMENT BY 1;


CREATE TABLE output_group  (
    id BIGINT IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(20),
    document_id BIGINT
);
CREATE SEQUENCE output_group_seq START WITH 1 INCREMENT BY 1;
ALTER TABLE output_group ADD FOREIGN KEY (document_id) REFERENCES output_document (id);


CREATE TABLE output_item  (
    id BIGINT IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(20),
    amount DECIMAL(10,2) NOT NULL, 
    group_id BIGINT,
    document_id BIGINT
);
CREATE SEQUENCE output_item_seq START WITH 1 INCREMENT BY 1;


CREATE TABLE output_total  (
    id BIGINT IDENTITY NOT NULL PRIMARY KEY,
    amount DECIMAL(10,2) NOT NULL,
    group_id BIGINT,
    document_id BIGINT
);
CREATE SEQUENCE output_total_seq START WITH 1 INCREMENT BY 1;


